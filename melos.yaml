name: firmware_updater_workspace
sdkPath: .fvm/flutter_sdk

packages:
  - apps/*

command:
  bootstrap:
    environment:
      sdk: '>=3.1.0 <4.0.0'
      flutter: '>=3.24.3'

    dev_dependencies:
      ubuntu_lints: ^0.4.0

scripts:
  # build all apps
  build: >
    melos exec -c 1 --fail-fast --flutter --dir-exists=linux -- \
      fvm flutter build linux

  # collect coverage information for all apps
  coverage: >
    melos exec -c 1 --fail-fast --dir-exists=test -- \
      fvm flutter test --coverage && melos run coverage:cleanup

  # cleanup generated files from coverage
  coverage:cleanup: >
    melos exec --file-exists=coverage/lcov.info -- \
      lcov --remove coverage/lcov.info \
        '**/*.freezed.dart' \
        '**/*.g.dart' \
        '**/*.mocks.dart' \
        '**/l10n/*.dart' \
        '**/*.pb*.dart' \
        -o coverage/lcov.info

  # format all apps
  format:exclude: >
    find . -name '*.dart' \
      ! -name '*.freezed.dart' \
      ! -name '*.g.dart' \
      ! -name '*.mocks.dart' \
      ! -path '*/l10n/*.dart' \
      ! -name '*.pb*.dart' \
      ! -path '*/.*/*' \
      | xargs fvm dart format --set-exit-if-changed

  # run build_runner to generate code in all apps
  generate: >
    melos exec -c 1 --fail-fast --depends-on=build_runner -- \
      fvm dart run build_runner build --delete-conflicting-outputs

  # run gen-l10n to generate localizations in all apps
  gen-l10n: >
    melos exec -c 1 --fail-fast --depends-on=flutter_localizations -- \
     fvm flutter gen-l10n

  # run integration tests in all apps
  integration_test: >
    melos exec -c 1 --fail-fast --dir-exists=integration_test -- \
      fvm flutter test integration_test

  # runs "flutter pub <arg(s)>" in all apps
  pub: melos exec -c 1 -- fvm flutter pub "$@"

  # run tests in all apps
  test: >
    melos exec -c 1 --fail-fast --dir-exists=test -- \
      fvm flutter test

  # run pub upgrade in all apps
  upgrade: melos pub upgrade
