// Mocks generated by Mockito 5.4.4 from annotations
// in firmware_updater/test/fwupd_dbus_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:io' as _i17;

import 'package:dbus/dbus.dart' as _i7;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i11;
import 'package:dio/src/dio.dart' as _i9;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:fwupd/src/fwupd_client.dart' as _i12;
import 'package:fwupd/src/fwupd_device.dart' as _i14;
import 'package:fwupd/src/fwupd_plugin.dart' as _i15;
import 'package:fwupd/src/fwupd_release.dart' as _i16;
import 'package:fwupd/src/fwupd_remote.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:upower/src/upower_client.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDBusProcessCredentials_5 extends _i1.SmartFake
    implements _i7.DBusProcessCredentials {
  _FakeDBusProcessCredentials_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDBusMethodSuccessResponse_6 extends _i1.SmartFake
    implements _i7.DBusMethodSuccessResponse {
  _FakeDBusMethodSuccessResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUPowerKbdBacklight_7 extends _i1.SmartFake
    implements _i8.UPowerKbdBacklight {
  _FakeUPowerKbdBacklight_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUPowerDevice_8 extends _i1.SmartFake implements _i8.UPowerDevice {
  _FakeUPowerDevice_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i9.Dio {
  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i11.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<dynamic>>);

  @override
  _i10.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i11.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<dynamic>>);

  @override
  _i10.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i11.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);

  @override
  _i10.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i10.Future<_i6.Response<T>>);
}

/// A class which mocks [FwupdClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockFwupdClient extends _i1.Mock implements _i12.FwupdClient {
  @override
  String get daemonVersion => (super.noSuchMethod(
        Invocation.getter(#daemonVersion),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#daemonVersion),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#daemonVersion),
        ),
      ) as String);

  @override
  String get hostProduct => (super.noSuchMethod(
        Invocation.getter(#hostProduct),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostProduct),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostProduct),
        ),
      ) as String);

  @override
  String get hostMachineId => (super.noSuchMethod(
        Invocation.getter(#hostMachineId),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostMachineId),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostMachineId),
        ),
      ) as String);

  @override
  String get hostSecurityId => (super.noSuchMethod(
        Invocation.getter(#hostSecurityId),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostSecurityId),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#hostSecurityId),
        ),
      ) as String);

  @override
  bool get tainted => (super.noSuchMethod(
        Invocation.getter(#tainted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get interactive => (super.noSuchMethod(
        Invocation.getter(#interactive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i12.FwupdStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i12.FwupdStatus.unknown,
        returnValueForMissingStub: _i12.FwupdStatus.unknown,
      ) as _i12.FwupdStatus);

  @override
  int get percentage => (super.noSuchMethod(
        Invocation.getter(#percentage),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i10.Stream<_i14.FwupdDevice> get deviceAdded => (super.noSuchMethod(
        Invocation.getter(#deviceAdded),
        returnValue: _i10.Stream<_i14.FwupdDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i14.FwupdDevice>.empty(),
      ) as _i10.Stream<_i14.FwupdDevice>);

  @override
  _i10.Stream<_i14.FwupdDevice> get deviceChanged => (super.noSuchMethod(
        Invocation.getter(#deviceChanged),
        returnValue: _i10.Stream<_i14.FwupdDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i14.FwupdDevice>.empty(),
      ) as _i10.Stream<_i14.FwupdDevice>);

  @override
  _i10.Stream<_i14.FwupdDevice> get deviceRemoved => (super.noSuchMethod(
        Invocation.getter(#deviceRemoved),
        returnValue: _i10.Stream<_i14.FwupdDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i14.FwupdDevice>.empty(),
      ) as _i10.Stream<_i14.FwupdDevice>);

  @override
  _i10.Stream<_i14.FwupdDevice> get deviceRequest => (super.noSuchMethod(
        Invocation.getter(#deviceRequest),
        returnValue: _i10.Stream<_i14.FwupdDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i14.FwupdDevice>.empty(),
      ) as _i10.Stream<_i14.FwupdDevice>);

  @override
  _i10.Stream<List<String>> get propertiesChanged => (super.noSuchMethod(
        Invocation.getter(#propertiesChanged),
        returnValue: _i10.Stream<List<String>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<String>>.empty(),
      ) as _i10.Stream<List<String>>);

  @override
  _i10.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> refreshPropertyCache() => (super.noSuchMethod(
        Invocation.method(
          #refreshPropertyCache,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<_i14.FwupdDevice>> getDevices() => (super.noSuchMethod(
        Invocation.method(
          #getDevices,
          [],
        ),
        returnValue:
            _i10.Future<List<_i14.FwupdDevice>>.value(<_i14.FwupdDevice>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i14.FwupdDevice>>.value(<_i14.FwupdDevice>[]),
      ) as _i10.Future<List<_i14.FwupdDevice>>);

  @override
  _i10.Future<List<_i15.FwupdPlugin>> getPlugins() => (super.noSuchMethod(
        Invocation.method(
          #getPlugins,
          [],
        ),
        returnValue:
            _i10.Future<List<_i15.FwupdPlugin>>.value(<_i15.FwupdPlugin>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i15.FwupdPlugin>>.value(<_i15.FwupdPlugin>[]),
      ) as _i10.Future<List<_i15.FwupdPlugin>>);

  @override
  _i10.Future<List<_i16.FwupdRelease>> getReleases(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReleases,
          [deviceId],
        ),
        returnValue:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
      ) as _i10.Future<List<_i16.FwupdRelease>>);

  @override
  _i10.Future<List<_i16.FwupdRelease>> getDowngrades(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDowngrades,
          [deviceId],
        ),
        returnValue:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
      ) as _i10.Future<List<_i16.FwupdRelease>>);

  @override
  _i10.Future<List<_i16.FwupdRelease>> getUpgrades(String? deviceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpgrades,
          [deviceId],
        ),
        returnValue:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i16.FwupdRelease>>.value(<_i16.FwupdRelease>[]),
      ) as _i10.Future<List<_i16.FwupdRelease>>);

  @override
  _i10.Future<Map<_i14.FwupdDevice, List<_i16.FwupdRelease>>> getDetails(
          _i17.ResourceHandle? handle) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetails,
          [handle],
        ),
        returnValue:
            _i10.Future<Map<_i14.FwupdDevice, List<_i16.FwupdRelease>>>.value(
                <_i14.FwupdDevice, List<_i16.FwupdRelease>>{}),
        returnValueForMissingStub:
            _i10.Future<Map<_i14.FwupdDevice, List<_i16.FwupdRelease>>>.value(
                <_i14.FwupdDevice, List<_i16.FwupdRelease>>{}),
      ) as _i10.Future<Map<_i14.FwupdDevice, List<_i16.FwupdRelease>>>);

  @override
  _i10.Future<void> install(
    String? id,
    _i17.ResourceHandle? handle, {
    Set<_i12.FwupdInstallFlag>? flags = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #install,
          [
            id,
            handle,
          ],
          {#flags: flags},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> verify(String? id) => (super.noSuchMethod(
        Invocation.method(
          #verify,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> verifyUpdate(String? id) => (super.noSuchMethod(
        Invocation.method(
          #verifyUpdate,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> unlock(String? id) => (super.noSuchMethod(
        Invocation.method(
          #unlock,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> activate(String? id) => (super.noSuchMethod(
        Invocation.method(
          #activate,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<_i18.FwupdRemote>> getRemotes() => (super.noSuchMethod(
        Invocation.method(
          #getRemotes,
          [],
        ),
        returnValue:
            _i10.Future<List<_i18.FwupdRemote>>.value(<_i18.FwupdRemote>[]),
        returnValueForMissingStub:
            _i10.Future<List<_i18.FwupdRemote>>.value(<_i18.FwupdRemote>[]),
      ) as _i10.Future<List<_i18.FwupdRemote>>);

  @override
  _i10.Future<List<String>> getApprovedFirmware() => (super.noSuchMethod(
        Invocation.method(
          #getApprovedFirmware,
          [],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);

  @override
  _i10.Future<void> setApprovedFirmware(List<String>? checksums) =>
      (super.noSuchMethod(
        Invocation.method(
          #setApprovedFirmware,
          [checksums],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<List<String>> getBlockedFirmware() => (super.noSuchMethod(
        Invocation.method(
          #getBlockedFirmware,
          [],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);

  @override
  _i10.Future<void> setBlockedFirmware(List<String>? checksums) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBlockedFirmware,
          [checksums],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> clearResults(String? id) => (super.noSuchMethod(
        Invocation.method(
          #clearResults,
          [id],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [DBusClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDBusClient extends _i1.Mock implements _i7.DBusClient {
  @override
  bool get introspectable => (super.noSuchMethod(
        Invocation.getter(#introspectable),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  String get uniqueName => (super.noSuchMethod(
        Invocation.getter(#uniqueName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#uniqueName),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#uniqueName),
        ),
      ) as String);

  @override
  Iterable<String> get ownedNames => (super.noSuchMethod(
        Invocation.getter(#ownedNames),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as Iterable<String>);

  @override
  _i10.Stream<String> get nameAcquired => (super.noSuchMethod(
        Invocation.getter(#nameAcquired),
        returnValue: _i10.Stream<String>.empty(),
        returnValueForMissingStub: _i10.Stream<String>.empty(),
      ) as _i10.Stream<String>);

  @override
  _i10.Stream<String> get nameLost => (super.noSuchMethod(
        Invocation.getter(#nameLost),
        returnValue: _i10.Stream<String>.empty(),
        returnValueForMissingStub: _i10.Stream<String>.empty(),
      ) as _i10.Stream<String>);

  @override
  _i10.Stream<_i7.DBusNameOwnerChangedEvent> get nameOwnerChanged =>
      (super.noSuchMethod(
        Invocation.getter(#nameOwnerChanged),
        returnValue: _i10.Stream<_i7.DBusNameOwnerChangedEvent>.empty(),
        returnValueForMissingStub:
            _i10.Stream<_i7.DBusNameOwnerChangedEvent>.empty(),
      ) as _i10.Stream<_i7.DBusNameOwnerChangedEvent>);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<_i7.DBusRequestNameReply> requestName(
    String? name, {
    Set<_i7.DBusRequestNameFlag>? flags = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestName,
          [name],
          {#flags: flags},
        ),
        returnValue: _i10.Future<_i7.DBusRequestNameReply>.value(
            _i7.DBusRequestNameReply.primaryOwner),
        returnValueForMissingStub: _i10.Future<_i7.DBusRequestNameReply>.value(
            _i7.DBusRequestNameReply.primaryOwner),
      ) as _i10.Future<_i7.DBusRequestNameReply>);

  @override
  _i10.Future<_i7.DBusReleaseNameReply> releaseName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #releaseName,
          [name],
        ),
        returnValue: _i10.Future<_i7.DBusReleaseNameReply>.value(
            _i7.DBusReleaseNameReply.released),
        returnValueForMissingStub: _i10.Future<_i7.DBusReleaseNameReply>.value(
            _i7.DBusReleaseNameReply.released),
      ) as _i10.Future<_i7.DBusReleaseNameReply>);

  @override
  _i10.Future<List<String>> listQueuedOwners(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #listQueuedOwners,
          [name],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);

  @override
  _i10.Future<List<String>> listNames() => (super.noSuchMethod(
        Invocation.method(
          #listNames,
          [],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);

  @override
  _i10.Future<List<String>> listActivatableNames() => (super.noSuchMethod(
        Invocation.method(
          #listActivatableNames,
          [],
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);

  @override
  _i10.Future<_i7.DBusStartServiceByNameReply> startServiceByName(
          String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #startServiceByName,
          [name],
        ),
        returnValue: _i10.Future<_i7.DBusStartServiceByNameReply>.value(
            _i7.DBusStartServiceByNameReply.success),
        returnValueForMissingStub:
            _i10.Future<_i7.DBusStartServiceByNameReply>.value(
                _i7.DBusStartServiceByNameReply.success),
      ) as _i10.Future<_i7.DBusStartServiceByNameReply>);

  @override
  _i10.Future<bool> nameHasOwner(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameHasOwner,
          [name],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<String?> getNameOwner(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getNameOwner,
          [name],
        ),
        returnValue: _i10.Future<String?>.value(),
        returnValueForMissingStub: _i10.Future<String?>.value(),
      ) as _i10.Future<String?>);

  @override
  _i10.Future<int> getConnectionUnixUser(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getConnectionUnixUser,
          [name],
        ),
        returnValue: _i10.Future<int>.value(0),
        returnValueForMissingStub: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> getConnectionUnixProcessId(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConnectionUnixProcessId,
          [name],
        ),
        returnValue: _i10.Future<int>.value(0),
        returnValueForMissingStub: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<_i7.DBusProcessCredentials> getConnectionCredentials(
          String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConnectionCredentials,
          [name],
        ),
        returnValue: _i10.Future<_i7.DBusProcessCredentials>.value(
            _FakeDBusProcessCredentials_5(
          this,
          Invocation.method(
            #getConnectionCredentials,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.DBusProcessCredentials>.value(
                _FakeDBusProcessCredentials_5(
          this,
          Invocation.method(
            #getConnectionCredentials,
            [name],
          ),
        )),
      ) as _i10.Future<_i7.DBusProcessCredentials>);

  @override
  _i10.Future<String> getId() => (super.noSuchMethod(
        Invocation.method(
          #getId,
          [],
        ),
        returnValue: _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getId,
            [],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<void> ping([String? destination = r'org.freedesktop.DBus']) =>
      (super.noSuchMethod(
        Invocation.method(
          #ping,
          [destination],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<String> getMachineId(
          [String? destination = r'org.freedesktop.DBus']) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMachineId,
          [destination],
        ),
        returnValue: _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getMachineId,
            [destination],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getMachineId,
            [destination],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<_i7.DBusMethodSuccessResponse> callMethod({
    String? destination,
    required _i7.DBusObjectPath? path,
    String? interface,
    required String? name,
    Iterable<_i7.DBusValue>? values = const [],
    _i7.DBusSignature? replySignature,
    bool? noReplyExpected = false,
    bool? noAutoStart = false,
    bool? allowInteractiveAuthorization = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #callMethod,
          [],
          {
            #destination: destination,
            #path: path,
            #interface: interface,
            #name: name,
            #values: values,
            #replySignature: replySignature,
            #noReplyExpected: noReplyExpected,
            #noAutoStart: noAutoStart,
            #allowInteractiveAuthorization: allowInteractiveAuthorization,
          },
        ),
        returnValue: _i10.Future<_i7.DBusMethodSuccessResponse>.value(
            _FakeDBusMethodSuccessResponse_6(
          this,
          Invocation.method(
            #callMethod,
            [],
            {
              #destination: destination,
              #path: path,
              #interface: interface,
              #name: name,
              #values: values,
              #replySignature: replySignature,
              #noReplyExpected: noReplyExpected,
              #noAutoStart: noAutoStart,
              #allowInteractiveAuthorization: allowInteractiveAuthorization,
            },
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<_i7.DBusMethodSuccessResponse>.value(
                _FakeDBusMethodSuccessResponse_6(
          this,
          Invocation.method(
            #callMethod,
            [],
            {
              #destination: destination,
              #path: path,
              #interface: interface,
              #name: name,
              #values: values,
              #replySignature: replySignature,
              #noReplyExpected: noReplyExpected,
              #noAutoStart: noAutoStart,
              #allowInteractiveAuthorization: allowInteractiveAuthorization,
            },
          ),
        )),
      ) as _i10.Future<_i7.DBusMethodSuccessResponse>);

  @override
  _i10.Future<void> emitSignal({
    String? destination,
    required _i7.DBusObjectPath? path,
    required String? interface,
    required String? name,
    Iterable<_i7.DBusValue>? values = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #emitSignal,
          [],
          {
            #destination: destination,
            #path: path,
            #interface: interface,
            #name: name,
            #values: values,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> registerObject(_i7.DBusObject? object) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerObject,
          [object],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<void> unregisterObject(_i7.DBusObject? object) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregisterObject,
          [object],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [UPowerClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockUPowerClient extends _i1.Mock implements _i8.UPowerClient {
  @override
  _i8.UPowerKbdBacklight get kbdBacklight => (super.noSuchMethod(
        Invocation.getter(#kbdBacklight),
        returnValue: _FakeUPowerKbdBacklight_7(
          this,
          Invocation.getter(#kbdBacklight),
        ),
        returnValueForMissingStub: _FakeUPowerKbdBacklight_7(
          this,
          Invocation.getter(#kbdBacklight),
        ),
      ) as _i8.UPowerKbdBacklight);

  @override
  set kbdBacklight(_i8.UPowerKbdBacklight? _kbdBacklight) => super.noSuchMethod(
        Invocation.setter(
          #kbdBacklight,
          _kbdBacklight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get daemonVersion => (super.noSuchMethod(
        Invocation.getter(#daemonVersion),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#daemonVersion),
        ),
        returnValueForMissingStub: _i13.dummyValue<String>(
          this,
          Invocation.getter(#daemonVersion),
        ),
      ) as String);

  @override
  bool get onBattery => (super.noSuchMethod(
        Invocation.getter(#onBattery),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get lidIsPresent => (super.noSuchMethod(
        Invocation.getter(#lidIsPresent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get lidIsClosed => (super.noSuchMethod(
        Invocation.getter(#lidIsClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i8.UPowerDevice> get devices => (super.noSuchMethod(
        Invocation.getter(#devices),
        returnValue: <_i8.UPowerDevice>[],
        returnValueForMissingStub: <_i8.UPowerDevice>[],
      ) as List<_i8.UPowerDevice>);

  @override
  _i8.UPowerDevice get displayDevice => (super.noSuchMethod(
        Invocation.getter(#displayDevice),
        returnValue: _FakeUPowerDevice_8(
          this,
          Invocation.getter(#displayDevice),
        ),
        returnValueForMissingStub: _FakeUPowerDevice_8(
          this,
          Invocation.getter(#displayDevice),
        ),
      ) as _i8.UPowerDevice);

  @override
  _i10.Stream<_i8.UPowerDevice> get deviceAdded => (super.noSuchMethod(
        Invocation.getter(#deviceAdded),
        returnValue: _i10.Stream<_i8.UPowerDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i8.UPowerDevice>.empty(),
      ) as _i10.Stream<_i8.UPowerDevice>);

  @override
  _i10.Stream<_i8.UPowerDevice> get deviceRemoved => (super.noSuchMethod(
        Invocation.getter(#deviceRemoved),
        returnValue: _i10.Stream<_i8.UPowerDevice>.empty(),
        returnValueForMissingStub: _i10.Stream<_i8.UPowerDevice>.empty(),
      ) as _i10.Stream<_i8.UPowerDevice>);

  @override
  _i10.Stream<List<String>> get propertiesChanged => (super.noSuchMethod(
        Invocation.getter(#propertiesChanged),
        returnValue: _i10.Stream<List<String>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<String>>.empty(),
      ) as _i10.Stream<List<String>>);

  @override
  _i10.Future<void> connect() => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);

  @override
  _i10.Future<String> getCriticalAction() => (super.noSuchMethod(
        Invocation.method(
          #getCriticalAction,
          [],
        ),
        returnValue: _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getCriticalAction,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i10.Future<String>.value(_i13.dummyValue<String>(
          this,
          Invocation.method(
            #getCriticalAction,
            [],
          ),
        )),
      ) as _i10.Future<String>);

  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}
